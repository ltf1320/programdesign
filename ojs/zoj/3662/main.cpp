#include <iostream>
#include <cstdio>
#include <cstring>

using namespace std;
const int maxn=1000+10;
const int maxm=1000+10;
const int maxk=100+10;
const int MOD=1E9+7;

int dp[2][maxn][100];
int LCM[maxn][maxn];
int mm[maxk]={1,
0,
0,
36,
340,
5610,
91840,
1574664,
27082440,
449243550,
34668031,
528908866,
196585939,
370224533,
880985397,
218282805,
558659204,
483870897,
586382964,
648607708,
137155792,
142250572,
560622549,
888206373,
246948851,
49618270,
397410019,
314270516,
500189330,
302077738,
120188631,
143830704,
885257661,
887008275,
550151433,
366677875,
785784395,
668400384,
722866118,
538051999,
432962308,
653855528,
984750096,
972996883,
512067567,
433749719,
53943745,
882659556,
836056769,
491860723,
981887222,
207949650,
868672060,
166163000,
803002033,
800085188,
428318871,
336580580,
800788656,
322942855,
282675533,
260644174,
999762649,
358956126,
627500246,
862851866,
228683019,
132110009,
79094459,
268674253,
109389495,
639326911,
318628398,
620870532,
733941214,
750944842,
131402324,
687732179,
768106436,
98247375,
184006502,
594156817,
864913847,
592855206,
998676894,
137456521,
924265642,
874335122,
347833797,
621243403,
765320384,
327426663,
237980333,
441104769,
148702267,
688176263,
933940850,
578184754,
875749085,
198840157
};
int op[50];
int ft[maxn];
int opn;
int N,M,K;

int gcd(int a,int b)
{
    int t;
    while(b)
    {
        t=b;
        b=a%b;
        a=t;
    }
    return a;
}

void pre()
{
    for(int i=1;i<=1000;i++)
        for(int j=1;j<=1000;j++)
        {
            LCM[i][j]=i*j/gcd(i,j);
        }
}

int main()
{
    freopen("in.txt","r",stdin);
    freopen("out.txt","w",stdout);
    int now;
 //   pre();
    while(~scanf("%d%d%d",&N,&M,&K))
    {
        memset(dp,0,sizeof(dp));
        opn=0;
        memset(ft,-1,sizeof(ft));
        for(int i=1;i<=M;i++)
            if(M%i==0)
            {
                op[opn]=i;
                ft[i]=opn++;
            }
        for(int p=0; p<opn; p++)
        {
            dp[1][op[p]][p]=1;
        }
        for(int k=1; k<K; k++)
        {
            memset(dp[(k&1)^1],0,sizeof(dp[(k&1)^1]));
            for(int i=k; i<=N; i++)
                for(int j=0; j<opn; j++)
                    if(dp[k&1][i][j])
                        for(int p=0; p<opn; p++)
                        {
                            now=ft[op[j]/gcd(op[p],op[j])*op[p]];
  //                          now=ft[LCM[op[j]][op[p]]];
                            if(i+op[p]+K-k-1>N) break;
                            dp[(k&1)^1][i+op[p]][now]+=dp[k&1][i][j];
                            if(dp[(k&1)^1][i+op[p]][now]>=MOD)
                                dp[(k&1)^1][i+op[p]][now]-=MOD;
                        }
        }
        printf("%d\n",dp[K&1][N][ft[M]]);
    }
    return 0;
}
