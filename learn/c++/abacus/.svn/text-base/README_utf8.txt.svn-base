


			              abacus 2
		               +--------------------+
			       ||||||||||||||||||||||
			       ++++++++++++++++++++++
			       ||||||||||||||||||||||
			       ||||||||||||||||||||||
			       +--------------------+


一、简介
========

      abacus 2 是一个小型的计算器，得名于中国古代著名计算工具----算盘，致力于打造一个完美的计算器，在计算过程中，你可以使用四则混合运算、可以使用组合数或者三角函数等大量数学函数、可以定义变量参与运算，你还可以把公式定义为数学函数以便参与运算等。

      下载地址：	http://www.oschina.net/code/snippet_736932_13725
      技术文档地址：	http://my.oschina.net/u/736932/blog?catalog=254400 
      E-mail:		zhoucosin@163.com

二、使用说明
============

      程序启动后，将执行命令处理循环，你应该逐条输入表达式进行计算或者输入一些控制命令，如定义变量或函数又或者查看某个函数的定义，在任何时候，你都可以输入 q 或者 quit 退出程序。
      要计算表达式的值，直接输入表达式即可
      1. 四则混合运算保持通常的数学书写习惯，除此之外，还支持下列运算符：
	x % y 	返回 x 除以 y 的余数，y 应为正整数
	x ^ y 	返回 x 的 y 次方，x 与 y 应满足指数运算的限制条件
   	x!	返回 x 的阶乘, x 应为非负整数
	x!!	返回 x 的双阶乘
	此外 abacus 2 内置了圆周率 pi 和自然对数的底数 e，可以直接用 pi 与 e 进行引用。
      2. 数学函数，支持数学函数列表如下：
	abs(x)		返回 x 的绝对值		
	pow(x, y)	返回 x 的 y 次方
	exp(x)		返回 e 的 x 次方，e 是自然对数的底数
	log(x, y)	返回 x 的以 y 为底的对数值
	ln(x)		返回 x 的自然对数值
	sqrt(x)		返回 x 的算术平方根
	sin(x)		返回 x 的正弦值，三角函数中的角均采用弧度
	cos(x)		返回 x 的余弦值
	tan(x)		返回 x 的正切值
	arcsin(x)	返回 x 的反正弦值
	arccos(x)	返回 x 的反余弦值
	arctan(x)	返回 x 的反正切值
	factorial(x)	返回 x 的阶乘
	cb(m, n)	返回从 n 个不同对象中选出 m 个对象的组合数
	max(x1, x2, ..., xn)	返回多个数中的最大者
	min(x1, x2, ..., xn)	返回多个数中的最小者
	ceil(x)		返回不大于 x 的最大整数
	floor(x)	返回不小于 x 的最小整数
	asin(x)		返回 x 的双曲正弦
	acos(x)		返回 x 的双曲余弦
	atan(x)		返回 x 的双曲正切
      3. 变量的定义及使用
      在计算过程中可以使用变量，定义变量的方式如下：
		var x
要定义多个变量可以用逗号进行分隔:
		var x, y, z
也可以在变量定义时给它赋值：
		var x = 1, y = sin(pi/3), z, u, v
对已经赋值的变量再次使用 let 命令进行赋值可以改变它的值。
如果变量在定义时未赋值，则必须在使用它参与运算之前给它赋值:
		let z = cb(2, 10), z = 0, u = 0, v = 0
在表达式中可以直接使用经过定义并赋值的变量，如果在表达式中使用没有定义的变量或者没有赋值的变量将产生一条错误提示。	
      4. 公式型函数的定义及使用
      你可以把自己频繁使用的表达式定义为函数，以省去重复输入长长的表达式的烦恼，例如你可以定义圆的面积函数如下：
		func AreaOfCycle(r) = pi * r * r
之后只要在表达式中就像使用内置数学函数一样使用它，并且，如果你想通过它来计算圆环的面积，那么你可以继续定义：
		func AreaOfRing(R, r) = AreaOfCycle(R) - AreaOfCycle(r)
如此等等，你也可以把一元二次方程的求根公式定义为一个函数，以便用它来解方程，当然，你得保证这个方程是有根的，否则，在计算的时候将会得到一个对负数开方的错误提示。
